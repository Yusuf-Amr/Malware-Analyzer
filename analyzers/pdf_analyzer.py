import subprocess
import PyPDF2
from .base_analyzer import BaseAnalyzer
from utils.hash_calculator import calculate_file_hash

class PDFAnalyzer(BaseAnalyzer):
    def __init__(self, file_path):
        self.file_path = file_path

    def run_command(self, command):
        try:
            result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
            if result.returncode != 0:
                return f"Error: {result.stderr}"
            return result.stdout
        except Exception as e:
            return f"Exception during execution: {e}"

    def run_pdf_parser(self):
        return self.run_command(["python3", "analyzers/Didier/pdf-parser.py", "-a", "-O", self.file_path])

    def list_all_structured_data(self):
        return self.run_command(["python3", "analyzers/Didier/pdf-parser.py", self.file_path])

    def run_pdfid(self):
        return self.run_command(["python3", "analyzers/Didier/pdfid.py", self.file_path])

    def extract_first_paragraph(self):
        try:
            reader = PyPDF2.PdfReader(self.file_path)
            first_page = reader.pages[0]
            text = first_page.extract_text()
            return text.split('\n')[0] if text else 'No text found'
        except Exception as e:
            return f"Exception during text extraction: {e}"

    def analyze(self):
        try:
            file_hash = calculate_file_hash(self.file_path)
            pdf_parser_output = self.run_pdf_parser()
            structured_data_output = self.list_all_structured_data()
            pdfid_output = self.run_pdfid()
            first_paragraph = self.extract_first_paragraph()

            return {
                'file_path': self.file_path,
                'file_hash': file_hash,
                'run_pdf_parser': pdf_parser_output,
                'list_all_structured_data': structured_data_output,
                'pdfid_output': pdfid_output,
                'first_pdf_paragraph': first_paragraph,
            }
        except Exception as e:
            return {
                'file_path': self.file_path,
                'error': str(e),
            }
